name: Deploy Angular Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular
        run: npm run prod

      - name: Terraform Init
        run: terraform -chdir=.aws/terraform init

      - name: Debug Terraform outputs
        run: terraform -chdir=.aws/terraform output

      - name: Get Terraform outputs
        id: tf
        run: |
          BUCKET=$(terraform -chdir=.aws/terraform output -raw frontend_bucket_name)
          DIST_ID=$(terraform -chdir=.aws/terraform output -raw cloudfront_distribution_id)
          DOMAIN=$(terraform -chdir=.aws/terraform output -raw cloudfront_domain_name) # if you have this output
          echo "bucket=$BUCKET" >> $GITHUB_OUTPUT
          echo "dist_id=$DIST_ID" >> $GITHUB_OUTPUT
          echo "domain=$DOMAIN" >> $GITHUB_OUTPUT

      - name: Upload to S3
        run: aws s3 sync dist/budget-ui/ s3://${{ steps.tf.outputs.bucket }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ steps.tf.outputs.dist_id }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Show deployed URL
        run: echo "Frontend deployed at https://${{ steps.tf.outputs.domain }}"
